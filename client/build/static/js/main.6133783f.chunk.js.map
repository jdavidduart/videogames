{"version":3,"sources":["actions/actions.js","components/navBar/navBar.js","components/videogame/videogame.js","components/videogames/videogames.js","components/pagination/pagination.js","components/loading/loading.js","components/home/home.js","components/landingPage/landingPage.js","components/searchResults/searchResults.js","components/createVideogame/createVideogame.js","components/videogameDetail/videogameDetail.js","App.js","reportWebVitals.js","reducer/reducer.js","store/store.js","index.js"],"names":["loading","payload","type","allResults","getData","numPag","url","a","axios","get","resultGet","concat","data","results","pageLimit","Math","ceil","count","allSearchResults","getDataResults","console","log","getAll","dispatch","error","NavBar","useState","searched","setSearched","useDispatch","history","useHistory","className","to","onClick","onSubmit","e","name","preventDefault","push","placeholder","onChange","target","value","color","size","Videogame","props","id","src","background_image","alt","genres","map","genre","index","length","Videogames","currentPosts","videogame","Pagination","postsPerPage","totalPosts","paginate","pageNumbers","activeIndex","setActiveIndex","useEffect","i","number","window","scrollTo","top","behavior","handleOnClick","Loading","Home","useSelector","store","allVideogames","currentPage","setCurrentPage","currentInfo","prevInfo","filterByGenre","states","setStates","state","indexOfLastPost","indexOfFirstPost","slice","pageNumber","arr","forEach","filter","parseInt","document","getElementById","selectedIndex","ownResults","existingResults","sort","b","toLowerCase","rating","byYear","released","LandingPage","SearchResults","searchResultsData","searchResults","CreateVideogame","platforms","description","formData","setFormData","genresCheck","setGenresCheck","platformsCheck","setPlatformsCheck","onChangeInputs","onChangeGenres","checked","onChangePlatforms","idsResults","obj","array","Object","entries","genreIds","platformIds","alert","post","htmlFor","platform","VideogameDetail","match","videogameDetail","videogameId","params","details","ReactHtmlParser","App","Fragment","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","action","createStore","compose","applyMiddleware","thunk","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render"],"mappings":"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","file":"static/js/main.6133783f.chunk.js","sourcesContent":["import axios from \"axios\"\r\nexport function loading(payload){\r\n    return {\r\n        type:\"LOADING\", payload: payload  \r\n    }\r\n}\r\n\r\n\r\nvar allResults = [];\r\nasync function getData(numPag, url){\r\n    try {\r\n        let resultGet = await axios.get(url + numPag) \r\n        allResults = allResults.concat(resultGet.data.results);\r\n        const pageLimit=Math.ceil(resultGet.data.count/40)\r\n        if(numPag <2 && numPag<pageLimit){\r\n            return getData(numPag + 1, url);\r\n        }\r\n    } catch (error) {\r\n        return allResults\r\n    }\r\n    \r\n};\r\n\r\nvar allSearchResults = [];\r\nasync function getDataResults(numPag, url){\r\n    try {\r\n        let resultGet = await axios.get(url + numPag) \r\n        allSearchResults = allSearchResults.concat(resultGet.data.results);\r\n        const pageLimit=Math.ceil(resultGet.data.count/40)\r\n        if(numPag <2 && numPag<pageLimit){\r\n            return getDataResults(numPag + 1, url);\r\n        }\r\n    } catch (error) {\r\n        console.log('soy error')\r\n    }\r\n    \r\n};\r\n\r\nexport function getAll() {\r\n    return async function (dispatch) {\r\n        try {\r\n            allResults=[]\r\n            dispatch(loading(true))\r\n            await getData(1, 'http://localhost:3001/videogames?page=')\r\n            dispatch({type: 'GET_ALL_VIDEOGAMES', payload: allResults})\r\n            dispatch(loading(false))\r\n        } catch (error) {\r\n            console.error(error)\r\n        }\r\n    }\r\n}\r\n\r\nexport function searchResults(name) {\r\n    return async function (dispatch) {\r\n        try {\r\n            dispatch(loading(true))\r\n            allSearchResults=[]\r\n            await getDataResults(1, 'http://localhost:3001/videogames?name=' + name + '&page=')\r\n            dispatch({type: 'SEARCH_RESULTS', payload: allSearchResults})\r\n            dispatch(loading(false))\r\n        } catch (error) {\r\n            console.error(error)\r\n        }\r\n    }\r\n}\r\n\r\nexport function getGenres() {\r\n    return async function (dispatch) {\r\n        try {\r\n            const results = await axios.get('http://localhost:3001/genres')\r\n            dispatch({type: 'GET_GENRES', payload: results.data})\r\n            \r\n        } catch (error) {\r\n            console.error(error)\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport function getPlatforms() {\r\n    return async function (dispatch) {\r\n        try {\r\n            const results = await axios.get('http://localhost:3001/platforms')\r\n            dispatch({type: 'GET_PLATFORMS', payload: results.data})\r\n        } catch (error) {\r\n            console.error(error)\r\n        }\r\n    }\r\n}\r\n\r\nexport function postVideogame(payload) {\r\n    return async function (dispatch) {\r\n        try {\r\n            \r\n            await axios.post('http://localhost:3001/videogames', payload)\r\n            dispatch(getAll())\r\n            alert('Successfully created')\r\n        } catch (error) {\r\n            console.error(error)\r\n        } \r\n    }\r\n}\r\n\r\nexport function videogameDetail(id) {\r\n    return async function (dispatch) {\r\n        try {\r\n            dispatch(loading(true))\r\n            const details = await axios.get('http://localhost:3001/videogames/' + id)\r\n            dispatch({type: 'GET_VIDEOGAME_DETAIL', payload: details.data})\r\n            dispatch(loading(false))\r\n        } catch (error) {\r\n            console.error(error)\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","import React, {useState} from 'react';\r\nimport {useDispatch} from \"react-redux\";\r\nimport './navBar.css'\r\nimport { BsSearch } from 'react-icons/bs';\r\nimport {searchResults} from '../../actions/actions'\r\nimport { useHistory, Link } from 'react-router-dom';\r\n\r\nfunction NavBar() {\r\n    const [searched, setSearched] = useState('')\r\n    const dispatch = useDispatch()\r\n    const history = useHistory();\r\n\r\n    const onChange = (e) =>{\r\n        setSearched(e.target.value)\r\n    } \r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        if(searched !== ''){\r\n            dispatch(searchResults(searched))\r\n            history.push('/home/searchResults')\r\n            setSearched('')\r\n        }  \r\n        \r\n    }\r\n\r\n    const resetInput = () => {\r\n        setSearched('')\r\n    } \r\n\r\n    return(\r\n        <nav className='navBar'>\r\n            <div className='home-Create'>\r\n                <div/>\r\n                <Link to='/home' onClick={resetInput} className='homeText'><div>Home</div></Link>\r\n                <Link to='/home/createVideogame' className='createText'><div>Create Videogame</div></Link>\r\n            </div>\r\n            <form onSubmit={onSubmit}>\r\n                <input\r\n                    className='searchInput'\r\n                    placeholder='What are you looking for?'\r\n                    onChange={onChange}\r\n                    value={searched || ''}\r\n                >\r\n                </input>\r\n                <button type='submit' className='searchIcon'><BsSearch color='black' size='18px' /></button>   \r\n            </form>\r\n            <div/>\r\n            <div/>\r\n        </nav> \r\n\r\n    )\r\n}\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport './videogame.css'\r\nimport { Link } from 'react-router-dom';\r\nfunction Videogame(props) {\r\n    return(\r\n        <div>\r\n            <Link to={`/home/videogame/${props.id}`} className='cardContainer'>\r\n            <div className='titleGame'>{props.name}</div>\r\n            <img className='imgPoster' src={props.background_image} alt=''></img>\r\n            <div>\r\n            <span className='text_white'>Genres: </span>\r\n                {\r\n                    props.genres?.map( (genre, index) => (\r\n                        <span className='text_white' key={index}>{index===props.genres.length-1? genre.name + '.' : genre.name + ','} </span>\r\n                    ))\r\n                }\r\n            </div>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Videogame;\r\n\r\n","import React from 'react';\r\nimport Videogame from '../videogame/videogame'\r\nimport './videogames.css'\r\nfunction Videogames({currentPosts}) {\r\n \r\n    return(\r\n        \r\n        <div className='videogamesContainer'>\r\n            {\r\n                 currentPosts?.map( (videogame) => (\r\n                    <div key={videogame.id}>\r\n                        <Videogame \r\n                            name={videogame.name}\r\n                            background_image={videogame.background_image}\r\n                            genres={videogame.genres}\r\n                            id={videogame.id}\r\n                        />\r\n                    </div>\r\n                )) \r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Videogames;","import React, {useState, useEffect} from 'react';\r\nimport './pagination.css'\r\nconst Pagination = ({ postsPerPage, totalPosts, paginate }) => {\r\n  const pageNumbers = [];\r\n  const [activeIndex, setActiveIndex] = useState(0);\r\n\r\n  useEffect(()=>{\r\n      setActiveIndex(0)\r\n  },[totalPosts])\r\n\r\n\r\n  for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  const handleOnClick = (index, number) => {\r\n    setActiveIndex(index); \r\n    paginate(number)\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: \"smooth\"\r\n    });\r\n  };\r\n  return (\r\n  \r\n    <div className='pagination'>\r\n      {pageNumbers.map( (number, index) => (\r\n          <span className={activeIndex === index ? \"active\" : \"unactive\"} key={number} onClick={() =>handleOnClick(index, number)}>\r\n              {number}\r\n          </span>\r\n\r\n      ))}\r\n    </div>\r\n  \r\n  );\r\n};\r\n\r\nexport default Pagination;","import React from \"react\";\r\nimport './loading.css'\r\nconst Loading = () => {\r\n  return (\r\n    <div className=\"lds-spinner\">\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  );\r\n};\r\nexport default Loading","import React, {useEffect, useState} from 'react';\r\nimport {useSelector} from \"react-redux\";\r\nimport './home.css'\r\nimport Videogames from '../videogames/videogames'\r\nimport Pagination from '../pagination/pagination';\r\nimport Loading from '../loading/loading'\r\nfunction Home() {\r\n    const allResults = useSelector((store) => store.allVideogames);\r\n    const loading = useSelector((store) => store.loading);\r\n    const genres = useSelector((store) => store.genres) \r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const [states, setStates] = useState({currentInfo:allResults, prevInfo:[], filterByGenre:[]});\r\n    const postsPerPage = 9;\r\n\r\n    useEffect(() =>{\r\n        \r\n        setStates(state =>({...state, currentInfo:allResults}))\r\n \r\n    },[allResults])\r\n    \r\n    const onChangeByGenre = (e) =>{\r\n        paginate(1)\r\n        if(e.target.value !== 'allGenres'){\r\n            const arr=[];\r\n            //busco en el store los generos que coincidan con el seleccionado y modifico la info actual\r\n            allResults.forEach(videogame =>{\r\n            const res = videogame.genres.filter(genre => genre.id === parseInt(e.target.value));\r\n            if(res.length>0){arr.push(videogame)}\r\n            })\r\n            setStates({...states, currentInfo:arr, prevInfo:[]})\r\n          \r\n        }else{\r\n            setStates({...states, currentInfo:allResults, prevInfo:[]})\r\n        }\r\n        document.getElementById(\"creationOptions\").selectedIndex = \"0\";\r\n    }\r\n    const onChangeByCreation = (e) =>{\r\n        const type=e.target.value\r\n        setCurrentPage(1)\r\n        if(type==='own'){\r\n                // si hay info previa, filtro en dicha info\r\n            if(states.prevInfo.length>0){\r\n                const ownResults=states.prevInfo.filter(videogame => videogame.id.length===36)\r\n                setStates({...states, currentInfo:ownResults})\r\n            }else{\r\n                //sino hay previa filtro en la actual\r\n                const ownResults=states.currentInfo.filter(videogame => videogame.id.length===36)\r\n                setStates({...states, currentInfo:ownResults, prevInfo:states.currentInfo})\r\n                \r\n            }\r\n\r\n        }\r\n        if(type==='existing'){\r\n            if(states.prevInfo.length>0){\r\n                const existingResults=states.prevInfo.filter(videogame => videogame.id >0)\r\n                setStates({...states, currentInfo:existingResults})      \r\n            }else{\r\n                const existingResults=states.currentInfo.filter(videogame => videogame.id >0)\r\n                setStates({...states, currentInfo:existingResults, prevInfo:states.currentInfo}) \r\n            }\r\n        }\r\n    }\r\n\r\n    const orderDesAlp = ()=>{\r\n        const data=states.currentInfo.sort((a, b)=>{\r\n            if(a.name.toLowerCase() < b.name.toLowerCase()) return -1;\r\n            if(a.name.toLowerCase() > b.name.toLowerCase()) return 1;\r\n            return 0\r\n        })\r\n        \r\n        setStates({...states, currentInfo:data})\r\n    }\r\n\r\n    const orderAscAlp = ()=>{\r\n        const data=states.currentInfo.sort((a, b)=>{\r\n            if(a.name.toLowerCase() < b.name.toLowerCase()) return 1;\r\n            if(a.name.toLowerCase() > b.name.toLowerCase()) return -1;\r\n            return 0\r\n        })\r\n        \r\n        setStates({...states, currentInfo:data})\r\n    }\r\n\r\n    const orderDesRating = ()=>{\r\n        const data=states.currentInfo.sort((a, b)=>{\r\n            if(a.rating < b.rating) return 1;\r\n            if(a.rating > b.rating) return -1;\r\n            return 0\r\n        })\r\n        \r\n        setStates({...states, currentInfo:data})\r\n    }\r\n    const orderAscRating = ()=>{\r\n        const data=states.currentInfo.sort((a, b)=>{\r\n            if(a.rating < b.rating) return -1;\r\n            if(a.rating > b.rating) return 1;\r\n            return 0\r\n        })\r\n        \r\n        setStates({...states, currentInfo:data})\r\n    }\r\n\r\n    const orderByYear = ()=>{\r\n        const byYear=states.currentInfo.sort((a,b) => {\r\n            if(a.released < b.released) return 1;\r\n            if(a.released > b.released) return -1;\r\n            return 0\r\n        })\r\n        setStates({...states, currentInfo:byYear})\r\n    }\r\n    // obtengo los post actuales por pagina\r\n    const indexOfLastPost = currentPage * postsPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n    let currentPosts = states.currentInfo.slice(indexOfFirstPost, indexOfLastPost);\r\n    const paginate = pageNumber => setCurrentPage(pageNumber);\r\n\r\n    if(loading){\r\n        return (\r\n            <div className='loadingContainer'>\r\n                <Loading/>\r\n            </div>\r\n        ) \r\n    }else{\r\n        return(\r\n            \r\n            <div className='homeContainer'>\r\n                <div className='gameContainer'>\r\n                    <label>Filter by: </label>\r\n                    <div className='filterContainer'>\r\n                        <div className='caja'>\r\n                            <select onChange={onChangeByGenre}>\r\n                                <option value='allGenres'>Genre</option>\r\n                                {\r\n                                genres.map(genre => <option value={genre.id} key={genre.id}>{genre.name}</option>) \r\n                                }\r\n                            </select> \r\n                        </div>\r\n                        <div className='caja'>\r\n                            <select onChange={onChangeByCreation} id='creationOptions'>\r\n                                <option>Type creation</option>\r\n                                <option value='own'>Own creation</option>\r\n                                <option value='existing'>Existing</option>\r\n                            </select>\r\n                        </div>\r\n                        <button onClick={orderDesAlp}>Order A-Z </button>\r\n                        <button onClick={orderAscAlp}>Order Z-A </button>\r\n                        <button onClick={orderDesRating}>Order Rating ↓</button>\r\n                        <button onClick={orderAscRating}>Order Rating ↑</button>\r\n                        <button onClick={orderByYear}>Order by year</button>\r\n                    </div>\r\n                    <Videogames currentPosts={currentPosts}/>\r\n                    <Pagination postsPerPage={postsPerPage} totalPosts={states.currentInfo.length} paginate={paginate}/>\r\n                </div>\r\n            </div>\r\n          \r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport './landingPage.css'\r\nimport {Link} from 'react-router-dom';\r\nfunction LandingPage() {\r\n    return(\r\n        <div className='landingPage'>\r\n            <h1 className='titleLanding'>Welcome to the Game Library!</h1>\r\n            <Link to='/home' className='link'>\r\n                <button className='buttonLanding'>Enter Now</button>\r\n            </Link>\r\n            <img src='https://images5.alphacoders.com/300/300715.jpg' alt=''></img>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LandingPage;","import React, { useState} from 'react';\r\nimport './searchResults.css'\r\nimport { useSelector} from \"react-redux\";\r\nimport Videogame from '../videogame/videogame';\r\nimport Pagination from '../pagination/pagination';\r\nimport Loading from '../loading/loading'\r\n\r\nfunction SearchResults() {\r\n\r\n    const searchResultsData = useSelector((store) => store.searchResults);\r\n    const loading = useSelector((store) => store.loading);\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const postsPerPage = 15\r\n   \r\n      // Get current posts\r\n    const indexOfLastPost = currentPage * postsPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n    const currentPosts = searchResultsData.slice(indexOfFirstPost, indexOfLastPost);\r\n    const paginate = pageNumber => setCurrentPage(pageNumber);\r\n\r\n    if(loading){\r\n        return (\r\n            <div className='loadingContainer'>\r\n                <Loading/>\r\n            </div>\r\n        ) \r\n    }else{\r\n        return(\r\n            <div className='fullResultsContainer'>\r\n                <div className='resultsContainer'>\r\n                    <div className='videogamesResults'>\r\n                        {\r\n                            currentPosts?.map( (videogame) => (\r\n                                <div key={videogame.id}>\r\n                                    \r\n                                        <Videogame \r\n                                            name={videogame.name}\r\n                                            background_image={videogame.background_image}\r\n                                            genres={videogame.genres}\r\n                                            id={videogame.id}\r\n                                        />\r\n                                    \r\n                                </div>\r\n                            ))\r\n                        }\r\n                    </div>\r\n                    <Pagination postsPerPage={postsPerPage} totalPosts={searchResultsData.length} paginate={paginate}/>\r\n                </div>\r\n            </div>\r\n    )\r\n    }\r\n}\r\n\r\nexport default SearchResults;","import React, {useEffect, useState} from 'react';\r\nimport './createVideogame.css'\r\nimport { useSelector, useDispatch} from \"react-redux\";\r\nimport {getPlatforms, postVideogame} from '../../actions/actions'\r\nfunction CreateVideogame() {\r\n    const genres = useSelector((store) => store.genres)\r\n    const platforms = useSelector((store) => store.platforms)\r\n    const dispatch = useDispatch();\r\n    const [formData, setFormData] = useState({name:'', description:'', rating:'',released:''})\r\n    const [genresCheck, setGenresCheck] = useState({}) \r\n    const [platformsCheck, setPlatformsCheck] = useState({}) \r\n    useEffect(() =>{\r\n        if(platforms.length===0){\r\n            dispatch(getPlatforms())\r\n        }\r\n    },[platforms.length, dispatch])\r\n\r\n    const onChangeInputs = (e) =>{\r\n        setFormData({...formData,[e.target.name]: e.target.value})\r\n    }\r\n    const onChangeGenres = (e) =>{\r\n        setGenresCheck({...genresCheck, [e.target.id]:e.target.checked})\r\n    }\r\n    const onChangePlatforms = (e) =>{\r\n        setPlatformsCheck({...platformsCheck, [e.target.id]:e.target.checked})\r\n    }\r\n\r\n    const idsResults = (obj) =>{\r\n        let array=[];\r\n        // por cada objeto, creo array de [keys,values] y selecciono los que sean true\r\n        Object.entries(obj).forEach( e => {\r\n            if(e[1]===true) {\r\n                array.push(e[0])\r\n            }\r\n        })\r\n        return array\r\n    }\r\n    const onSubmit = (e) =>{\r\n        e.preventDefault();\r\n        let obj=formData;\r\n        obj.genreIds=idsResults(genresCheck)\r\n        obj.platformIds=idsResults(platformsCheck)\r\n        if(obj.name.length===0) alert('YOU MUST ENTER A NAME')\r\n        else if(obj.description.length===0) alert('YOU MUST ENTER A DESCRIPTION')\r\n        else if(obj.released.length===0) alert('YOU MUST ENTER A RELEASE DATE')\r\n        else if(obj.rating.length===0) alert('YOU MUST ENTER A RATING')\r\n        else if(obj.genreIds.length===0) alert('YOU MUST SELECT AT LEAST ONE GENDER')      \r\n        else if(obj.platformIds.length===0) alert('YOU MUST SELECT AT LEAST ONE PLATFORM') \r\n        else{\r\n            dispatch(postVideogame(obj))\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className='createContainer'>\r\n            <div className='titleForm'>CREATION FORM</div>\r\n            <form onSubmit={onSubmit} className='formCreate'>\r\n                <div className='input_field'>\r\n                    <label>Name:</label>\r\n                    <input name='name' onChange={onChangeInputs} className='input'></input>\r\n                </div>\r\n                <div className='input_field'>\r\n                    <label>Release date:</label>\r\n                    <input name='released' onChange={onChangeInputs} className='input'></input>\r\n                </div>\r\n                <div className='input_field'>\r\n                    <label>Raiting:</label>\r\n                    <input name='rating' onChange={onChangeInputs} className='inputRating'></input>\r\n                </div>\r\n                \r\n                <div className='input_field'>\r\n                    <label>Description:</label>\r\n                    <textarea name='description' onChange={onChangeInputs}></textarea>\r\n                </div>\r\n                <div className='input_field'>\r\n                    <label>Poster Url</label>\r\n                    <input name='background_image' onChange={onChangeInputs} className='input'></input>\r\n                </div>\r\n                <div className='genres_platforms'>\r\n                    <div className='genresContainer'>\r\n                    <p>Genres:</p>\r\n                        {\r\n                            genres?.map(genre =>(\r\n                                <div key={genre.id}>\r\n                                    <input type='checkbox' name={genre.name} onChange={onChangeGenres} id={genre.id}></input>\r\n                                    <label htmlFor={genre.id}>{genre.name}</label>\r\n                                </div>\r\n                            ))\r\n                        }\r\n                    </div>\r\n                    <div className='platforms_Container'>\r\n                    <p>Platforms:</p>\r\n                        <div  className='platforms_subContainer'>\r\n                            {\r\n                                platforms?.map(platform =>(\r\n                                    <div key={platform.id}>\r\n                                        <input type='checkbox' name={platform.name} onChange={onChangePlatforms} id={platform.id}></input>\r\n                                        <label htmlFor={platform.id}>{platform.name}</label>\r\n                                    </div>\r\n                                ))\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <button type='submit'>Create</button>\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n  export default CreateVideogame;","import React, {useEffect} from 'react';\r\nimport { useSelector, useDispatch} from \"react-redux\";\r\nimport { videogameDetail } from '../../actions/actions';\r\nimport './videogameDetail.css';\r\nimport ReactHtmlParser from 'react-html-parser';\r\nimport Loading from '../loading/loading'\r\nimport { RiStarFill } from \"react-icons/ri\";\r\n\r\nfunction VideogameDetail({match}) {\r\n    const videogame = useSelector((store) => store.videogameDetail);\r\n    const loading = useSelector((store) => store.loading);\r\n    const dispatch = useDispatch()\r\n    const videogameId=match.params.id;\r\n\r\n    useEffect(()=>{\r\n        dispatch(videogameDetail(videogameId))\r\n    },[dispatch, videogameId])\r\n\r\n    if(loading){\r\n        return (\r\n            <div className='loadingContainer'>\r\n                <Loading/>\r\n            </div>\r\n        ) \r\n    }else{\r\n        return(\r\n            <div className='fullContainer'>\r\n                <div className='detailContainer'>\r\n                    <div>\r\n                        <h3 className='title'>{videogame.name}</h3>\r\n                        <img className='poster' src={videogame.background_image} alt=''></img>\r\n                    </div>\r\n                    <div className='infoContainer'>\r\n                        <div className='description'>\r\n                            {ReactHtmlParser(videogame.description)}\r\n                        </div>\r\n                        <div className='extraInfo'>\r\n                            <h4>Genres: \r\n                                <span className='noBold'>\r\n                                    {\r\n                                        videogame.genres?.map( (genre, index) => (\r\n                                            <span key={index}> {index===videogame.genres.length-1? genre.name + '.' : genre.name + ','}</span>\r\n                                        ))\r\n                                    }\r\n                                </span>\r\n                            </h4>\r\n                            <h4>Launch Date: <span className='noBold'>{videogame.released}</span></h4>\r\n                            <h4>Platforms: \r\n                                <span className='noBold'>\r\n                                    {\r\n                                        videogame.platforms?.map( (platform, index) => (\r\n                                            videogame.platforms[0].platform ?\r\n                                            <span key={index}> {index===videogame.platforms.length-1? platform.platform.name + '.' : platform.platform.name + ','}</span>\r\n                                            :\r\n                                            <span key={index}> {index===videogame.platforms.length-1? platform.name + '.' : platform.name + ','}</span>\r\n                                        ))\r\n                                    }\r\n                                </span>\r\n                            </h4>\r\n                            <p><RiStarFill size='30px' className='starRating'/><span className='textRating'>{videogame.rating}</span><span className='textRating2'>/5</span></p>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default VideogameDetail;","import './App.css';\r\nimport { Route } from \"react-router-dom\";\r\nimport NavBar from \"./components/navBar/navBar\"\r\nimport Home from \"./components/home/home\"\r\nimport React, {useEffect} from 'react';\r\nimport LandingPage from './components/landingPage/landingPage';\r\nimport SearchResults from './components/searchResults/searchResults';\r\nimport CreateVideogame from './components/createVideogame/createVideogame';\r\nimport VideogameDetail from './components/videogameDetail/videogameDetail'\r\nimport {useDispatch} from \"react-redux\"\r\nimport { getAll, getGenres } from './actions/actions';\r\n\r\nfunction App() {\r\n\r\n  const dispatch = useDispatch()\r\n  useEffect(()=>{\r\n    dispatch(getGenres())\r\n    dispatch(getAll())   \r\n  },[dispatch])\r\n\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Route\r\n        exact path='/'\r\n        component={LandingPage}\r\n      />\r\n      <Route\r\n        path='/home'\r\n        component={NavBar}\r\n      />\r\n      <Route\r\n        exact path='/home'\r\n        component={Home}\r\n      />\r\n      <Route\r\n        exact path='/home/searchResults'\r\n        component={SearchResults}\r\n      />\r\n      <Route\r\n        exact path='/home/createVideogame'\r\n        component={CreateVideogame}\r\n      />\r\n      <Route\r\n        exact path='/home/videogame/:id'\r\n        component={VideogameDetail}\r\n      />\r\n\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const initialState = {\r\n    allVideogames:[],\r\n    searchResults:[],\r\n    genres:[],\r\n    platforms:[],\r\n    videogameDetail:[],\r\n    loading: false\r\n}\r\n\r\nfunction rootReducer(state = initialState, action) {\r\n    if(action.type === 'GET_ALL_VIDEOGAMES'){\r\n        return{\r\n            ...state,\r\n            allVideogames: action.payload\r\n        }\r\n    }\r\n    if(action.type === 'SEARCH_RESULTS'){\r\n        return{\r\n            ...state,\r\n            searchResults: action.payload\r\n        }\r\n    }\r\n    if(action.type === 'GET_GENRES'){\r\n        return{\r\n            ...state,\r\n            genres: action.payload\r\n        }\r\n    }\r\n    if(action.type === 'GET_PLATFORMS'){\r\n        return{\r\n            ...state,\r\n            platforms: action.payload\r\n        }\r\n    }\r\n    if(action.type === 'GET_VIDEOGAME_DETAIL'){\r\n        return{\r\n            ...state,\r\n            videogameDetail: action.payload\r\n        }\r\n    }\r\n    if(action.type === \"LOADING\") {\r\n        return {\r\n          ...state,\r\n          loading: action.payload\r\n        };\r\n    }\r\n      \r\n      return state\r\n\r\n}\r\n\r\nexport default rootReducer;","  \r\nimport { createStore, applyMiddleware, compose} from \"redux\";\r\nimport rootReducer from \"../reducer/reducer\";\r\nimport thunk from \"redux-thunk\";\r\nconst store = createStore(rootReducer, \r\n    compose(applyMiddleware(thunk),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\r\n));\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store/store\";\r\n\r\nReactDOM.render(\r\n<Provider store={store}>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\nreportWebVitals();\r\n"],"sourceRoot":""}